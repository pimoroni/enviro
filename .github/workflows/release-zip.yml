name: Build Zip

on:
  push:
  pull_request:
  release:
    types: [created]

jobs:
  build:
    name: Build Zip
    runs-on: ubuntu-20.04

    env:
      RELEASE_FILE: enviro-${{github.event.release.tag_name || github.sha}}
      FIRMWARE_NAME: pimoroni-enviro-v1.20.4-micropython
      FIRMWARE_URL: https://github.com/pimoroni/pimoroni-pico/releases/download/v1.20.4

    steps:
    - uses: actions/checkout@v2
      with:
        path: enviro
        submodules: true

    - uses: actions/checkout@v2
      with:
        repository: gadgetoid/dir2uf2
        ref: v0.0.1
        path: dir2uf2

    - name: Prepare repository
      shell: bash
      run: |
        python3 -m pip install littlefs-python==0.4.0
        wget ${{env.FIRMWARE_URL}}/${{env.FIRMWARE_NAME}}.uf2
        ./dir2uf2/dir2uf2 --append-to ${{env.FIRMWARE_NAME}}.uf2 --manifest enviro/uf2-manifest.txt --filename ${{env.RELEASE_FILE}}.uf2 enviro/
        rm -rf enviro/.git*
        rm -rf enviro/phew/.git*

    - uses: vimtor/action-zip@v1
      with:
        files: enviro/
        dest: ${{env.RELEASE_FILE}}.zip

    - name: Store .zip as artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.RELEASE_FILE}}
        path: enviro/

    - name: Store filesystem .uf2 as artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.RELEASE_FILE}}-filesystem-only
        path: ${{env.RELEASE_FILE}}.uf2

    - name: Store full .uf2 as artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.FIRMWARE_NAME}}-${{env.RELEASE_FILE}}.uf2
        path: ${{env.FIRMWARE_NAME}}-${{env.RELEASE_FILE}}.uf2

    - name: Upload source .zip
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        asset_path: ${{env.RELEASE_FILE}}.zip
        upload_url: ${{github.event.release.upload_url}}
        asset_name: ${{env.RELEASE_FILE}}.zip
        asset_content_type: application/octet-stream

    - name: Upload filesystem .uf2
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        asset_path: ${{env.RELEASE_FILE}}.uf2
        upload_url: ${{github.event.release.upload_url}}
        asset_name: ${{env.RELEASE_FILE}}-filesystem-only.uf2
        asset_content_type: application/octet-stream

    - name: Upload full firmware .uf2
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        asset_path: ${{env.FIRMWARE_NAME}}-${{env.RELEASE_FILE}}.uf2
        upload_url: ${{github.event.release.upload_url}}
        asset_name: ${{env.FIRMWARE_NAME}}-${{env.RELEASE_FILE}}.uf2
        asset_content_type: application/octet-stream
